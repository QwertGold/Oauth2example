apply plugin: 'war'
apply plugin: 'findbugs'
apply plugin: "jacoco"

repositories {
    mavenCentral()
}

def spring = "4.1.4.RELEASE"

dependencies {
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.7.RELEASE'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.10'
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'org.projectlombok:lombok:1.14.8'
    compile 'com.google.guava:guava:18.0'
    compile 'jstl:jstl:1.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.0'

    providedCompile "javax.servlet:javax.servlet-api:3.1.0"
    providedCompile 'javax.servlet.jsp:jsp-api:2.2'

    testCompile 'org.apache.httpcomponents:httpclient:4.5'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

configurations.all {
    resolutionStrategy {
        // fail eagerly on version conflict (includes transitive dependencies)
        // e.g. multiple different versions of the same dependency (group and name are equal)
        failOnVersionConflict()

        force(
                'commons-codec:commons-codec:1.9',
                'commons-logging:commons-logging:1.2',
                'xml-apis:xml-apis:1.3.03'

        )
        eachDependency { DependencyResolveDetails details ->
            //specifying a fixed version for all libraries with 'org.springframework' group
            if (details.requested.group == 'org.springframework') {
                details.useVersion(spring)
            }
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false;
            html.enabled = true;
        }
    }

}

task printEnvironment   {
    outputs.upToDateWhen { false }
    println ''
    System.getenv().each{ k, v -> println "${k}:${v}" }
    println ''

}

build.dependsOn printEnvironment



